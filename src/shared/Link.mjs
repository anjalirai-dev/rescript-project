// Generated by ReScript, PLEASE EDIT WITH CARE

import * as React from "react";
import * as Router from "./Router.mjs";
import * as Belt_List from "rescript/lib/es6/belt_List.js";
import * as Belt_Array from "rescript/lib/es6/belt_Array.js";
import * as Belt_Option from "rescript/lib/es6/belt_Option.js";
import * as Caml_option from "rescript/lib/es6/caml_option.js";
import * as Css from "@emotion/css";

function Link(Props) {
  var href = Props.href;
  var matchHref = Props.matchHref;
  var className = Props.className;
  var style = Props.style;
  var activeClassName = Props.activeClassName;
  var activeStyle = Props.activeStyle;
  var matchSubroutesOpt = Props.matchSubroutes;
  var title = Props.title;
  var children = Props.children;
  var matchSubroutes = matchSubroutesOpt !== undefined ? matchSubroutesOpt : false;
  var url = Router.useUrl(undefined, undefined);
  var path = Belt_List.reduce(url.path, "", (function (acc, item) {
          return acc + "/" + item;
        }));
  var compareHref = Belt_Option.getWithDefault(matchHref, href);
  var isActive = matchSubroutes ? (path + "/").startsWith(compareHref) || path.startsWith(compareHref) : path === compareHref || path + "/" === compareHref;
  var actualHref = Router.makeHref(href);
  var match = isActive ? activeStyle : undefined;
  var tmp;
  if (style !== undefined) {
    var a = Caml_option.valFromOption(style);
    tmp = match !== undefined ? Caml_option.some(Object.assign({}, a, Caml_option.valFromOption(match))) : Caml_option.some(a);
  } else {
    tmp = match !== undefined ? Caml_option.some(Caml_option.valFromOption(match)) : undefined;
  }
  var tmp$1 = {
    className: Css.cx(Belt_Array.keepMap([
              className,
              isActive ? activeClassName : undefined
            ], (function (x) {
                return x;
              }))),
    href: actualHref,
    onClick: (function ($$event) {
        var match = $$event.metaKey;
        var match$1 = $$event.ctrlKey;
        if (match || match$1) {
          return ;
        } else {
          $$event.preventDefault();
          return Router.push(href);
        }
      })
  };
  if (tmp !== undefined) {
    tmp$1.style = Caml_option.valFromOption(tmp);
  }
  if (title !== undefined) {
    tmp$1.title = Caml_option.valFromOption(title);
  }
  return React.createElement("a", tmp$1, children);
}

var make = Link;

export {
  make ,
  
}
/* react Not a pure module */
